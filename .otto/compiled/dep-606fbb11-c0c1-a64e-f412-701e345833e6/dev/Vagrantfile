# Generated by Otto, do not edit!
#
# This is the Vagrantfile generated by Otto for the development of
# this application/service. It should not be hand-edited. To modify the
# Vagrantfile, use the Appfile.

Vagrant.configure("2") do |config|
  
  if ENV["OTTO_VAGRANT_LAYER_PATH"]
    config.vm.clone = ENV["OTTO_VAGRANT_LAYER_PATH"]
  else
    config.vm.box = "hashicorp/precise64"
    config.vm.box_check_update = false
    config.vm.provider :parallels do |p, o|
      o.vm.box = "parallels/ubuntu-12.04"
    end
  end
  

  # Host only network
  config.vm.network "private_network", ip: "100.75.247.103"

  
  # Setup a synced folder from our working directory to /vagrant
  config.vm.synced_folder '/Users/thiago/Projects/Ruby/rails-otto/.otto/appfile/deps/f9c5cbbc8a591d282aa723ad4f1e324a', "/vagrant",
    owner: "vagrant", group: "vagrant"
  

  # Enable SSH agent forwarding so getting private dependencies works
  config.ssh.forward_agent = true

  # Foundation configuration (if any)
  
  dir = "/otto/foundation-1"
  config.vm.synced_folder '/Users/thiago/Projects/Ruby/rails-otto/.otto/compiled/dep-606fbb11-c0c1-a64e-f412-701e345833e6/foundation-consul/app-dev', dir
  config.vm.provision "shell", inline: "cd #{dir} && bash #{dir}/main.sh"
  

  # ScriptPacks
  dir = "/otto/scriptpacks"
  config.vm.provision "shell", inline: "sudo rm -rf #{dir}; sudo mkdir -p #{dir}; sudo chmod 0777 #{dir}"
  

  # Load all our fragments here for any dependencies.
  

  # Use linked clones if possible
  config.vm.provider "virtualbox" do |p|
    p.linked_clone = true
  end

  if Vagrant.has_plugin?("vagrant-parallels", ">= 1.6.0")
    config.vm.provider "parallels" do |p|
      p.linked_clone = true
    end
  end

  # This is to work around some bugs right now
  ["vmware_fusion", "vmware_workstation"].each do |name|
    config.vm.provider(name) do |p|
      p.enable_vmrun_ip_lookup = false
    end
  end

  
  # Disable the default synced folder
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # Read in the fragment that we use as a dep
  eval(File.read("/Users/thiago/Projects/Ruby/rails-otto/.otto/compiled/dep-606fbb11-c0c1-a64e-f412-701e345833e6/dev-dep/Vagrantfile.fragment"), binding)

  # Setup some stuff
  config.vm.provision "shell", inline: $script

end




$script = <<SCRIPT
set -e

# otto-exec: execute command with output logged but not displayed
oe() { $@ 2>&1 | logger -t otto > /dev/null; }

# otto-log: output a prefixed message
ol() { echo "[otto] $@"; }

# Configuring SSH for faster login
if ! grep "UseDNS no" /etc/ssh/sshd_config >/dev/null; then
  echo "UseDNS no" | sudo tee -a /etc/ssh/sshd_config >/dev/null
  oe sudo service ssh restart
fi

export DEBIAN_FRONTEND=noninteractive

ol "Installing HTTPS driver for Apt..."
oe sudo apt-get update
oe sudo apt-get install -y apt-transport-https
SCRIPT

